version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: spend-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - spend-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: spend-backend-prod
    restart: always
    environment:
      MONGODB_URI: mongodb://admin:${MONGO_PASSWORD:-password123}@mongodb:27017/spend_db?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      PORT: 8080
    depends_on:
      - mongodb
    networks:
      - spend-network
    volumes:
      - ./backend:/app
    expose:
      - "8080"

  # AI Service
  ai-service:
    build: 
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: spend-ai-service-prod
    restart: always
    environment:
      OLLAMA_URL: ${OLLAMA_URL:-http://olla.hcmutertic.com}
      AI_MODEL: ${AI_MODEL:-deepseek-r1:8b}
      BACKEND_URL: http://backend:8080
    depends_on:
      - backend
    networks:
      - spend-network
    volumes:
      - ./ai-service:/app
    expose:
      - "8000"

  # Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spend-frontend-prod
    restart: always
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost/api}
      REACT_APP_AI_SERVICE_URL: ${REACT_APP_AI_SERVICE_URL:-http://localhost/ai}
    depends_on:
      - backend
    networks:
      - spend-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - "3000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: spend-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - spend-network

  # SSL Certificate (Let's Encrypt)
  certbot:
    image: certbot/certbot
    container_name: spend-certbot-prod
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}

volumes:
  mongodb_data:

networks:
  spend-network:
    driver: bridge
